<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.novel.mapper.ChapterMapper">
  <resultMap id="BaseResultMap" type="com.novel.bean.Chapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="chaptertext" jdbcType="VARCHAR" property="chaptertext" />
    <result column="contentid" jdbcType="INTEGER" property="contentid" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="novelid" jdbcType="INTEGER" property="novelid" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chaptertext, contentid, createtime, count, source, novelid, num
  </sql>
  <select id="selectByExample" parameterType="com.novel.bean.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.novel.bean.ChapterExample">
    delete from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.novel.bean.Chapter">
    insert into chapter (id, chaptertext, contentid, 
      createtime, count, source, 
      novelid, num)
    values (#{id,jdbcType=INTEGER}, #{chaptertext,jdbcType=VARCHAR}, #{contentid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, 
      #{novelid,jdbcType=INTEGER}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.novel.bean.Chapter">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chaptertext != null">
        chaptertext,
      </if>
      <if test="contentid != null">
        contentid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="novelid != null">
        novelid,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chaptertext != null">
        #{chaptertext,jdbcType=VARCHAR},
      </if>
      <if test="contentid != null">
        #{contentid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="novelid != null">
        #{novelid,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.novel.bean.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chaptertext != null">
        chaptertext = #{record.chaptertext,jdbcType=VARCHAR},
      </if>
      <if test="record.contentid != null">
        contentid = #{record.contentid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.novelid != null">
        novelid = #{record.novelid,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter
    set id = #{record.id,jdbcType=INTEGER},
      chaptertext = #{record.chaptertext,jdbcType=VARCHAR},
      contentid = #{record.contentid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      source = #{record.source,jdbcType=VARCHAR},
      novelid = #{record.novelid,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.novel.bean.Chapter">
    update chapter
    <set>
      <if test="chaptertext != null">
        chaptertext = #{chaptertext,jdbcType=VARCHAR},
      </if>
      <if test="contentid != null">
        contentid = #{contentid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="novelid != null">
        novelid = #{novelid,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.novel.bean.Chapter">
    update chapter
    set chaptertext = #{chaptertext,jdbcType=VARCHAR},
      contentid = #{contentid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      novelid = #{novelid,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>