<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.novel.mapper.NovelClockMapper">
  <resultMap id="BaseResultMap" type="com.novel.bean.NovelClock">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="chapterurl" jdbcType="VARCHAR" property="chapterurl" />
    <result column="clockstate" jdbcType="INTEGER" property="clockstate" />
    <result column="titleurl" jdbcType="VARCHAR" property="titleurl" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chapterurl, clockstate, titleurl, state, createtime, updatetime, num
  </sql>
  <select id="selectByExample" parameterType="com.novel.bean.NovelClockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from novelclock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from novelclock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from novelclock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.novel.bean.NovelClockExample">
    delete from novelclock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.novel.bean.NovelClock">
    insert into novelclock (id, chapterurl, clockstate, 
      titleurl, state, createtime, 
      updatetime, num)
    values (#{id,jdbcType=INTEGER}, #{chapterurl,jdbcType=VARCHAR}, #{clockstate,jdbcType=INTEGER}, 
      #{titleurl,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.novel.bean.NovelClock">
    insert into novelclock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chapterurl != null">
        chapterurl,
      </if>
      <if test="clockstate != null">
        clockstate,
      </if>
      <if test="titleurl != null">
        titleurl,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chapterurl != null">
        #{chapterurl,jdbcType=VARCHAR},
      </if>
      <if test="clockstate != null">
        #{clockstate,jdbcType=INTEGER},
      </if>
      <if test="titleurl != null">
        #{titleurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.novel.bean.NovelClockExample" resultType="java.lang.Long">
    select count(*) from novelclock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update novelclock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chapterurl != null">
        chapterurl = #{record.chapterurl,jdbcType=VARCHAR},
      </if>
      <if test="record.clockstate != null">
        clockstate = #{record.clockstate,jdbcType=INTEGER},
      </if>
      <if test="record.titleurl != null">
        titleurl = #{record.titleurl,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update novelclock
    set id = #{record.id,jdbcType=INTEGER},
      chapterurl = #{record.chapterurl,jdbcType=VARCHAR},
      clockstate = #{record.clockstate,jdbcType=INTEGER},
      titleurl = #{record.titleurl,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.novel.bean.NovelClock">
    update novelclock
    <set>
      <if test="chapterurl != null">
        chapterurl = #{chapterurl,jdbcType=VARCHAR},
      </if>
      <if test="clockstate != null">
        clockstate = #{clockstate,jdbcType=INTEGER},
      </if>
      <if test="titleurl != null">
        titleurl = #{titleurl,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.novel.bean.NovelClock">
    update novelclock
    set chapterurl = #{chapterurl,jdbcType=VARCHAR},
      clockstate = #{clockstate,jdbcType=INTEGER},
      titleurl = #{titleurl,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>